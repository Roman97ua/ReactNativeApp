{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import Button from\"react-native-web/dist/exports/Button\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{NavigationProp}from\"@react-navigation/core\";import{NavigationNativeContainer}from\"@react-navigation/native\";import{createStackNavigator}from\"@react-navigation/stack\";import AsyncStorage from\"@react-native-community/async-storage\";var Stack=createStackNavigator();function Login(props){return React.createElement(View,{style:style.container},React.createElement(View,{style:style.inputContainer},React.createElement(Text,{style:style.label},\"Username\"),React.createElement(TextInput,{placeholder:\"Username\",style:style.input})),React.createElement(View,{style:style.inputContainer},React.createElement(Text,{style:style.label},\"Password\"),React.createElement(TextInput,{placeholder:\"******\",secureTextEntry:true,style:style.input})),React.createElement(Button,{title:\"Login\",onPress:function _callee(){var navigation;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:navigation=props.navigation;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\",\"yourtoken\"));case 3:navigation.navigate(\"Home\");case 4:case\"end\":return _context.stop();}}});}}));}function Home(){return React.createElement(View,{style:style.container},React.createElement(Text,null,\"Home Page\"));}var App=function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){function init(){var userToken;return _regeneratorRuntime.async(function init$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);_context2.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));case 3:userToken=_context2.sent;if(userToken){setToken(userToken);}setLoading(false);case 6:case\"end\":return _context2.stop();}}});}init();},[]);if(loading){return React.createElement(View,{style:style.container},React.createElement(ActivityIndicator,{size:\"large\"}));}return React.createElement(NavigationNativeContainer,null,React.createElement(Stack.Navigator,{initialRouteName:token?\"Home\":\"Login\"},React.createElement(Stack.Screen,{name:\"Login\",component:Login,options:{header:null}}),React.createElement(Stack.Screen,{name:\"Home\",component:Home})));};var style=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\"},inputContainer:{width:\"80%\",marginBottom:20},input:{borderStyle:\"solid\",borderWidth:1},label:{fontWeight:\"bold\",paddingVertical:10}});export default App;","map":{"version":3,"sources":["C:/project/share-places/App.js"],"names":["React","useState","useEffect","NavigationProp","NavigationNativeContainer","createStackNavigator","AsyncStorage","Stack","Login","props","style","container","inputContainer","label","input","navigation","setItem","navigate","Home","App","token","setToken","loading","setLoading","init","getItem","userToken","header","StyleSheet","create","flex","justifyContent","alignItems","width","marginBottom","borderStyle","borderWidth","fontWeight","paddingVertical"],"mappings":"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","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  View,\n  TextInput,\n  Text,\n  Button,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { NavigationProp } from \"@react-navigation/core\";\nimport { NavigationNativeContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nconst Stack = createStackNavigator();\n\ntype Props = {\n  navigation: NavigationProp,\n};\nfunction Login(props: Props) {\n  return (\n      <View style={style.container}>\n        <View style={style.inputContainer}>\n          <Text style={style.label}>Username</Text>\n          <TextInput placeholder=\"Username\" style={style.input} />\n        </View>\n\n        <View style={style.inputContainer}>\n          <Text style={style.label}>Password</Text>\n          <TextInput placeholder=\"******\" secureTextEntry style={style.input} />\n        </View>\n        <Button\n            title=\"Login\"\n            onPress={async () => {\n              const { navigation } = props;\n\n              // testing purpose\n              await AsyncStorage.setItem(\"token\", \"yourtoken\");\n              navigation.navigate(\"Home\");\n            }}\n        />\n      </View>\n  );\n}\n\nfunction Home() {\n  return (\n      <View style={style.container}>\n        <Text>Home Page</Text>\n      </View>\n  );\n}\n\nconst App: () => React$Node = () => {\n  const [token, setToken] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      setLoading(true);\n      const userToken = await AsyncStorage.getItem(\"token\");\n\n      if (userToken) {\n        setToken(userToken);\n      }\n\n      setLoading(false);\n    }\n\n    init();\n  }, []);\n\n  if (loading) {\n    return (\n        <View style={style.container}>\n          <ActivityIndicator size=\"large\" />\n        </View>\n    );\n  }\n\n  return (\n      <NavigationNativeContainer>\n        <Stack.Navigator initialRouteName={token ? \"Home\" : \"Login\"}>\n          <Stack.Screen\n              name=\"Login\"\n              component={Login}\n              options={{ header: null }}\n          />\n          <Stack.Screen name=\"Home\" component={Home} />\n        </Stack.Navigator>\n      </NavigationNativeContainer>\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inputContainer: {\n    width: \"80%\",\n    marginBottom: 20,\n  },\n  input: {\n    borderStyle: \"solid\",\n    borderWidth: 1,\n  },\n  label: {\n    fontWeight: \"bold\",\n    paddingVertical: 10,\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}